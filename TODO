Spatial TODO List
=================

(Also used as a detailed roadmap, may change according to user
expectations or interests)

VERSION 2.0.0

* Mar 11 Finish the implementation of the self-balancing containers,
           and create the new family of containers, frozen_pointset,
           in order to store points without rebalancing. By default,
           *_pointset will be self-blancing containers. This involves
           a heavy unit-testing and thus, it should take a good 3
           months. DONE!

* Jun 11 Some documentation and unit test missing on the first
           release, so we just need to add them. Just a few are
           missing, only. Additionaly, check that the library is
           compiling fine on Visual Studio. Plus add better examples.
           In progress...

* Jul 11 Add interator_cast() operators to cast a view interator into
           a container iterator, to facilitate erasing a node from a
           container, for example. Cause it currently involves quite a
           messy use of iterator constructor. DONE! (Iterator casting
           is supported in the iterator themselves)

* Aug 11 Complete General doxygen documention with details on
           container and views, elaboration of how to write geometry,
           etc. This documentation should serve as a complete user
           manual, it should be accompanied by a bit of library
           polishing. Should take about 2 months. It would mark the
           milestone 1.0 release, and the end of the beta period, if
           enough people have used it. In progress...

* Oct 11 Addition of intrusive containers for every existing ones. The
           intrusive containers should have a rather limited inpact on
           the existing code if possible, but should make a great
           difference in terms of performance for those who need
           them. Should take about 2 months. In progress...

* Dec 11 Implementation of pointmap containers. Need to add quite a
           bit of unit testing, cause they differ from pointset in the
           sense that their iterator are not always constant. It
           should also take about 2 months. It would mark the 1.1
           release. DONE!

* Feb 12 Work on boxset containers, add a new type of iterator:
           contain_iterator and intersect_iterator which walk through
           all the boxes that are contained in a range or that are
           intersecting a range, respectively. With unit tests, that
           should take a good 3 months. It would also mark the 1.2
           release. DONE!

* Apr 12 Add a new type of iterator known as ordered_iterator. This
           iterator always walks through the nodes of the tree in the
           same order. This iterator is absolutely necessary to
           properly implement some elementary functions such as "=="
           between containers. In progress...

* Sep 12 Add the boxmap family of iterators. That would mark the 1.3
           release and that would probably be the last release before
           a long, long period of bug fixing and compatibility
           improvements. DONE!


VERSION 2.1.0

* Dec 12 Final optimization: work on adding performance-based tests
           and comparison with other libraries in the market. Wouldn't
           it be nice to see how it fares against ANN or libkdtree++?

* Feb 12 Implementing containers that hold only unique keys, with
           bracket operators just like std::map and std::set. They
           would be simply pointset, boxset, pointmap and boxmap.

* Apr 13 Porting Spatial to scripting/duck-typing languages or
           frameworks? Python, Java, Lua, Ruby, .Net, others?


VERSION 2.2.0

* Jul 13 Add new iterators such at ray_iterator, which travels along a
           vector, in a given geometry. This iterator works only on
           boxset family of iterators. Some new functions for geometry
           should appear and therefore, it would make defining a
           geometry quite a complex business, needing more
           documentation. Should take about 2 months.

* Sep 13   Add: VP-tree?
